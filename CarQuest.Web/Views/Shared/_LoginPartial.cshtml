@using Microsoft.AspNetCore.Identity
@using CarQuest.Data.Models
@using CarQuest.Services.Interfaces
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IMechanicService MechanicService
@{
	bool isUserMechanic = false;

	if (Guid.TryParse(UserManager.GetUserId(User), out Guid userId))
	{
		isUserMechanic = await MechanicService.MechanicExistsByUserIdAsync(userId);
	}
}

<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		@if (!isUserMechanic)
		{
			<li class="nav-item">
				<a class="nav-link text-dark" asp-area=""
				   asp-controller="Mechanic" asp-action="Become">Become Mechanic</a>
			</li>
		}

		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
		</li>
		<li class="nav-item">
			<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
		</li>
	}
</ul>
